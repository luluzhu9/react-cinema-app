version: 2.1

jobs:
  build: # can name this whatever you want
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout # checks out current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH} # display current branch's name
      - restore_cache: # restores cached dependency
          keys: # check if cache exists
            - app-{{ checksum "package.json" }} 
            - app-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache: # if cache doesn't exist, save cache
          paths: 
            - node_modules
          key: app-{{ checksum "package.json" }}

  deploy-to-aws-s3:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python3-pip python-dev build-essential
      - run: # creates build dir, recursively zips everything in build dir, 
          name: Build Project
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build successful"
      - run: # moves items in build to bucket, deletes items from build
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete
            fi

  deploy-to-aws-cloudfront:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python3-pip python-dev build-essential
      - run: # creates build dir, recursively zips everything in build dir, 
          name: Build Project
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build successful"
      - run: # moves items in build to bucket, deletes items from build
          name: Deploy to AWS Cloudfront
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - master

